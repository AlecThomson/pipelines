[data]
vis = ''

[fields]
bpassfield = ''
fluxfield = ''
phasecalfield = ''
targetfields = ''

[slurm]                           # See processMeerKAT.py -h for documentation
nodes = 2
ntasks_per_node = 8
plane = 1
mem = 236                         # Use this many GB of memory (per node)
partition = 'Main'                # SLURM partition to use
exclude = ''                      # SLURM nodes to exclude
time = '12:00:00'
submit = False
container = '/idia/software/containers/casa-stable-5.6.2-2.simg'
mpi_wrapper = '/idia/software/pipelines/casa-pipeline-release-5.6.1-8.el7/bin/mpicasa'
name = ''
dependencies = ''
account = 'b03-idia-ag'
reservation = ''
verbose = False
precal_scripts = [('calc_refant.py',False,''), ('partition.py',True,'')]
postcal_scripts = [('concat.py',False,''), ('selfcal_part1.py',True,''), ('selfcal_part2.py',False,'')]
scripts = [ ('validate_input.py',False,''),
            ('flag_round_1.py',True,''),
            ('calc_refant.py',False,''),
            ('setjy.py',True,''),
            ('xx_yy_solve.py',False,''),
            ('xx_yy_apply.py',True,''),
            ('flag_round_2.py',True,''),
            ('xx_yy_solve.py',False,''),
            ('xx_yy_apply.py',True,''),
            ('split.py',True,''),
            ('quick_tclean.py',True,''),
            ('plot_solutions.py',False,'')]

[crosscal]
minbaselines = 4                  # Minimum number of baselines to use while calibrating
preavg = 1                        # Number of channels to average before calibration (during partition)
specavg = 1                       # Number of channels to average after calibration (during split)
timeavg = '8s'                    # Time interval to average after calibration (during split)
keepmms = True                    # Output MMS (True) or MS (False) during split
spw = '0:860~1700MHz'             # Spectral window / frequencies to extract for MMS
nspw = 16                         # Number of spectral windows to split into
calcrefant = True                 # Calculate reference antenna in program (overwrites 'refant')
refant = 'm059'                   # Reference antenna name / number
standard = 'Stevens-Reynolds 2016'# Flux density standard for setjy
badants = []                      # List of bad antenna numbers (to flag)
badfreqranges = [ '935~947MHz',   # List of bad frequency ranges (to flag)
                  '1160~1310MHz',
                  '1476~1611MHz',
                  '1670~1700MHz']

[selfcal]
nloops = 4                        # Number of clean + bdsf + self-cal loops.
restart_no = 0                    # If nonzero, adds this number to nloops to name images
cell = '2.0arcsec'
robust = -0.5
imsize = [6827, 6827]
wprojplanes = 128
niter = [8000, 11000, 14000, 15000, 200000]
threshold = [100e-6, 50e-6, 20e-6, 10e-6, 4e-6] # In units of Jy
multiscale = [15, 10, 5]
nterms = 2                        # Number of taylor terms
gridder = 'wproject'
deconvolver = 'mtmfs'
solint = ['10min','5min','2min','1min']
calmode = 'p'
atrous = True                     # Source find for diffuse emission (see PyBDSF docs)

[run]
continue = True